// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {
        globalDependencyVersions = [
            gradleVersion : '7.1.0-alpha11', // Gradle Configuration
            kotlinVersion : '1.5.30',        // Kotlin Configuration
            daggerHiltVersion : '2.38.1',    // Dagger Hilt Plugin
            gmsMatcher : '1.2.2',            // GMS Matcher Configuration
            seekVersions  : '0.39.0'         // Project Dependency Update Crawler Plugin
        ]

        globalModuleConfiguration = [
            compileSdk: 31,
            targetSdk: 31,
            minSdk: 21,
            buildTools: '30.0.3',
            testInstrumentationRunner: 'androidx.test.runner.AndroidJUnitRunner'
        ]
    }

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:" \
            + "$globalDependencyVersions.gradleVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:" \
            + "$globalDependencyVersions.kotlinVersion"
        classpath "com.google.android.gms:strict-version-matcher-plugin:" \
            + "$globalDependencyVersions.gmsMatcher"
        classpath "com.github.ben-manes:gradle-versions-plugin:" \
            + "$globalDependencyVersions.seekVersions"
        classpath "com.google.dagger:hilt-android-gradle-plugin:" \
            + "$globalDependencyVersions.daggerHiltVersion"
    }

}

/** Force all modules to use the same configuration. */
subprojects {
    afterEvaluate { module ->
        if (module.hasProperty('android')) {

            apply plugin: "com.github.ben-manes.versions" /* Project Dependency Update Crawler Plugin */

            android {

                compileSdkVersion globalModuleConfiguration.compileSdk
                buildToolsVersion globalModuleConfiguration.buildTools

                defaultConfig {
                    minSdkVersion             globalModuleConfiguration.minSdk
                    targetSdkVersion          globalModuleConfiguration.targetSdk
                    testInstrumentationRunner globalModuleConfiguration.testInstrumentationRunner
                }

            }
            
        }
    }
}

allprojects {

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

}

task clean(type: Delete) { delete rootProject.buildDir }
