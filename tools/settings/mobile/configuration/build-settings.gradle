android {

    buildTypes {

        prod {

            initWith        release
            debuggable      false
            minifyEnabled   true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles   "$project.rootDir/tools/obfuscation/mobile/proguard-rules.pro"
            signingConfig   signingConfigs.blueprint

            manifestPlaceholders += [
                    appIcon: "@mipmap/ic_launcher",
                    appIconRound: "@mipmap/ic_launcher_round"
            ]

            // Add further PROD configurations here

        }

        qa {
            initWith            debug
            debuggable          true
            minifyEnabled       false
            shrinkResources     false
            zipAlignEnabled     true
            applicationIdSuffix versions.appIdSuffixQa
            proguardFiles       "$project.rootDir/tools/obfuscation/mobile/proguard-rules.pro"

            manifestPlaceholders += [
                    appIcon: "@drawable/ic_launcher_qa",
                    appIconRound: "@drawable/ic_launcher_round_qa"
            ]

            // Add further QA configurations here

        }

        dev {

            initWith            debug
            debuggable          true
            minifyEnabled       false
            shrinkResources     false
            zipAlignEnabled     false
            applicationIdSuffix versions.appIdSuffixDev
            proguardFiles       "$project.rootDir/tools/obfuscation/mobile/proguard-rules-debug.pro"

            manifestPlaceholders += [
                    appIcon: "@drawable/ic_launcher_dev",
                    appIconRound: "@drawable/ic_launcher_round_dev"
            ]

            // Add further DEV configurations here

        }

        // Add further custom build types here, for example Internal QA and External QA builds

    }

}

android.variantFilter { variant ->
    if (variant.buildType.name.endsWith('release') || variant.buildType.name.endsWith('debug')) {
        variant.setIgnore(true)
    }
}
